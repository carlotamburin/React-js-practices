Vježba 5
Proširiti prethodnu vježbu. Select kontrole napraviti dijelom forme, koja će predstavljati tražilicu. Mockani podaci sadrže informacije o proizvodima. Profiltrirani proizvodi se ispisuju na ekran unutar komponente Rezultati. Pored svakog profiltriranog proizvoda nalazi se botun. Klikom na botun otvara se nova komponenta Detalji, na kojoj se ispisuju detalji o proizvodu. Osim detalja o proizvodu, na dnu ekrana nalazi se opcija za dodavanje proizvoda u košaricu. 
Realizacija košarice
Košaricu ćete realizirati preko Context API-a, budući da želimo da bude vidljiva na razini cijele aplikacije.  Sjetiti se kako košarica funkcionira. Ukoliko odabrani proizvod već postoji u košarici, povećat će mu se količina. Ukoliko ne postoji dodati će se u košaricu. 
Neka je taj dio koda u odvojenoj funkciji, koja će se pozvati klikom na botun „dodaj u košaricu“. U tijelu funkcije se bavimo update-anjem stanja košarice. Ako je proizvod u košarici, vratiti će se novi array svih proizvoda, sa uvećanom količinom odabranog proizvoda. U protivnom će se vratiti novi array sa postojećim proizvodima i dodanim novim proizvodom (u oba slučaja zgodno je koristiti spread (...) operator).  Prilikom svakog uspješnog dodavanja proizvoda u košaricu otvara se modalni prozor na kojem piše poruka „proizvod je dodan u košaricu“. Osim toga, korisnika se pita želi li vidjeti trenutno stanje košarice. Ako je odgovor „ne“ uklanja se modalni prozor, u protivnom se korisnika vodi na komponentu Kosarica (koristiti navigate() funkciju iz paketa @reach/router). Modalni prozor ćete realizirati korištenjem koncepta Portals. 
Komponente Details i Cart otvaraju se u odvojenim rutama od ostatka aplikacije (koristiti paket @reach/router). 
Prema osobnom nahođenju odabrati jednu od komponenti i izraditi je kao class komponentu.
Napomena: S obzirom da nemamo back-end, i zasad moramo mockati podatke, zgodno je imati mock sa svim proizvodima skupa sa detaljima. Filtriranje se moze odraditi na front-endu, kao i prosljeđivanje detalja na stranicu za prikaz.

